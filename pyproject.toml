[project]
name = "dbt-loom"
version = "0.9.2"
description = "A dbt-core plugin to import public nodes in multi-project deployments."
authors = [{ name = "Nicholas Yager", email = "yager@nicholasyager.com" }]
requires-python = ">=3.9,<4.0"
readme = "README.md"
dependencies = [
    "dbt-core>=1.6.0,<1.11.0",
    "requests>=2.31.0,<3",
    "google-cloud-storage>=2.13.0,<3",
    "boto3>=1.28.84,<2",
    "azure-storage-blob>=12.19.0,<13",
    "azure-identity>=1.15.0,<2",
    "types-pyyaml>=6.0.12.12,<7",
    "types-networkx>=3.2.1.20240313,<4",
    "paradime-io>=4.11.0,<5",
    "google-auth>=2.40.3",
]

[project.optional-dependencies]
snowflake = []

[dependency-groups]
dev = [
    "ruff>=0.3.0,<0.12",
    "pytest>=7.4.0,<8",
    "isort>=5.12.0,<6",
    "dbt-duckdb>=1.6.0,<1.10.0",
    "duckdb>=0.8.0",
    "pre-commit>=3.6.0,<4",
    "mypy>=1.8.0,<2",
]
docs = ["mkdocs-material>=9.5.45,<10", "mike>=2.1.3,<3"]

[tool.commitizen]
version = "0.9.2"
version_files = ["pyproject.toml:^version"]

[tool.uv]
default-groups = ["dev", "docs"]

[tool.hatch.build.targets.sdist]
include = ["dbt_loom"]

[tool.hatch.build.targets.wheel]
include = ["dbt_loom"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88

[tool.isort]
force_grid_wrap = 0 # Resolve conflict with Black
line_length = 88    # Comply with Ruff and Black

[tool.pytest.ini_options]
testpaths = ["tests"]
